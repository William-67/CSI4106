#import essential libraries
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import CategoricalNB, GaussianNB
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

from sklearn.metrics import classification_report

# Specify the column for one-hot encoding
column_to_encode = 'RiskLevel'

# Initialize the encoder
encoder = OneHotEncoder(sparse=False)

# Encode the 'RiskLevel' column
encoded_discrete = encoder.fit_transform(dataset[[column_to_encode]])

# Convert the encoded result to a DataFrame with appropriate column names
encoded_df = pd.DataFrame(encoded_discrete, columns=encoder.get_feature_names_out([column_to_encode]))

# Concatenate the encoded DataFrame with the original dataset, excluding the 'RiskLevel' column
dataset_encoded = pd.concat([dataset, encoded_df], axis=1).drop([column_to_encode], axis=1)

# Print the encoded DataFrame
print(dataset_encoded)